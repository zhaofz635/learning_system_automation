{
  "textbook_features": [
    {
      "difficulty_score": 3.9,
      "linguistic_complexity": 0.4994930875576037,
      "formula_density": 0.0029063635427797733,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.008771929824561403,
      "structural_disorganization": 0.37
    },
    {
      "difficulty_score": 4.4,
      "linguistic_complexity": 0.5030128205128205,
      "formula_density": 0.0062456899536349276,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.011695906432748537,
      "structural_disorganization": 0.28
    },
    {
      "difficulty_score": 2.7,
      "linguistic_complexity": 0.45873376623376616,
      "formula_density": 0.008749721798947698,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.004784688995215311,
      "structural_disorganization": 0.35
    },
    {
      "difficulty_score": 3.7,
      "linguistic_complexity": 0.48310559006211184,
      "formula_density": 0.026382763658019583,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.009574468085106383,
      "structural_disorganization": 0.31
    },
    {
      "difficulty_score": 5.4,
      "linguistic_complexity": 0.5201054852320675,
      "formula_density": 0.021241679981182638,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.01485148514851485,
      "structural_disorganization": 0.32
    },
    {
      "difficulty_score": 8.5,
      "linguistic_complexity": 0.49466760961810474,
      "formula_density": 0.03167038118499904,
      "diagram_complexity": 0.5,
      "knowledge_abstraction": 0.007936507936507936,
      "structural_disorganization": 0.32
    },
    {
      "difficulty_score": 5.6,
      "linguistic_complexity": 0.5960772357723578,
      "formula_density": 0.04162968809405001,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.024390243902439025,
      "structural_disorganization": 0.3
    },
    {
      "difficulty_score": 5.4,
      "linguistic_complexity": 0.5091304347826087,
      "formula_density": 0.0,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.016483516483516484,
      "structural_disorganization": 0.34
    },
    {
      "difficulty_score": 2.7,
      "linguistic_complexity": 0.44749999999999995,
      "formula_density": 0.012599686565810881,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.005555555555555556,
      "structural_disorganization": 0.28
    },
    {
      "difficulty_score": 2.8,
      "linguistic_complexity": 0.48681372549019597,
      "formula_density": 0.015878061638504123,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.005813953488372093,
      "structural_disorganization": 0.28
    },
    {
      "difficulty_score": 5.1,
      "linguistic_complexity": 0.4196666666666667,
      "formula_density": 0.0,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.0,
      "structural_disorganization": 0.25
    },
    {
      "difficulty_score": 2.7,
      "linguistic_complexity": 0.4756060606060606,
      "formula_density": 0.0331507324014726,
      "diagram_complexity": 0.0,
      "knowledge_abstraction": 0.005025125628140704,
      "structural_disorganization": 0.3
    }
  ],
  "overall_difficulty": 4.424641907215118,
  "students": [
    {
      "student_id": "345",
      "cognitive_load_level": "high",
      "认知负荷得分": 87.5,
      "score": 0.0,
      "教材难易度": 2.52,
      "Δ范围": 1.52,
      "P(θ)区间": 0.01,
      "调节等级": "slight_downgrade",
      "操作建议": "略微降低语言复杂度，增加辅助说明",
      "匹配状态": "需降低难度"
    }
  ],
  "new_textbooks": [
    {
      "student_id": "345",
      "new_textbook": {
        "text": "```json\n{\n  \"text\": \"大型语言模型：挑战\\n\\n1.1 概述：大型语言模型（LLMs）在文本生成和翻译方面取得了显著进展。这些模型可以帮助我们自动写文章、翻译语言，甚至回答问题。\\n\\n1.1.1 常见模型：例如BERT和GPT-4，它们都基于一种叫做Transformer的结构。这种结构让模型能更好地理解句子中的每个词是怎么联系在一起的。\\n\\n1.1.2 工作机制：Transformer 使用了一种叫做“注意力机制”的方法。你可以把它想象成一个人在阅读时，会特别注意某些词，而忽略其他不太相关的词。这种方法让模型处理长句子变得更快、更准确。\\n\\n1.2 计算复杂度：训练这些模型需要非常强大的计算机。其中一个原因是，模型需要处理很长的句子（我们称为序列长度n），同时每个词的信息维度也很高（我们称为维度d）。\\n\\n例如，假设一个句子有100个词（n=100），每个词用768个数字表示（d=768），那么计算量就会非常大。大致来说，训练这样的模型需要的计算量是随着n的平方和d的大小一起增长的，我们用公式表示为 C(n, d) = O(n² × d)。\\n\\n1.3 挑战范围：大型语言模型不仅在技术上有挑战，还面临一些道德和实际应用的问题。比如，它们会不会说出不实或有害的话？我们该如何让它们更好地帮助人们而不是造成麻烦？\\n\\n通过学习这些问题，我们可以更好地理解大型语言模型，并想办法让它们变得更安全、更实用。\",\n  \"image_path\": \"\"\n}\n```",
        "image_path": ""
      }
    }
  ]
}