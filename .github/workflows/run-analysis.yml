name: Textbook Analysis Pipeline

on:
  workflow_dispatch:
    inputs:
      student_id:
        description: '学生ID (如 test001)'
        required: true
        type: string
      score:
        description: '测试成绩 (0-100分)'
        required: true
        type: string
      cognitive_load:
        description: '认知负荷评分 (1-5分，逗号分隔，8个值)'
        required: true
        type: string
      user_feedback:
        description: '学生反馈 (如"我觉得太难")'
        required: false
        type: string
        default: ''

jobs:
  analyze:
    # 使用你推送的镜像，跳过所有安装
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/zhaofz635/learning_system_automation:textbook-pipeline
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # 1. 检出代码（为了读取输入和提交结果）
      - uses: actions/checkout@v4

      # 2. 准备输入数据
      - name: Prepare input files
        run: |
          cognitive_load_array=$(echo "${{ inputs.cognitive_load }}" | tr ',' ' ')
          cat > input_data.json <<EOF
          [
            {
              "student_id": "${{ inputs.student_id }}",
              "score": ${{ inputs.score }},
              "cognitive_load": [${cognitive_load_array// /,}],
              "user_feedback": "${{ inputs.user_feedback }}"
            }
          ]
          EOF
          echo "📄 输入文件已生成:"
          cat input_data.json
        shell: bash
      # - name: Prepare input files
      #   run: |
      #     cognitive_load_array=$(echo "${{ inputs.cognitive_load }}" | tr ',' ' ')
      #     cat > input_data.json <<EOF
      #     [
      #       {
      #         "student_id": "${{ inputs.student_id }}",
      #         "score": ${{ inputs.score }},
      #         "cognitive_load": [${cognitive_load_array// /,}],
      #         "user_feedback": "${{ inputs.user_feedback }}"
      #       }
      #     ]
      #     EOF
      #     echo "📄 输入文件已生成:"
      #     cat input_data.json

      # 3. 直接运行分析脚本（无需安装！）
      - name: Run analysis
        env:
          ACCESS_KEY_SECRET: ${{ secrets.ACCESS_KEY_SECRET }}
        run: |
          echo "🔍 开始运行 textbook_difficulty_system.py"
          python textbook_difficulty_system.py \
            --cognitive_load input_data.json \
            --scores input_data.json \
            --textbook textbook.json \
            --output results.json
          echo "✅ 分析完成"
          cat results.json

      # 4. 提交结果到 GitHub
            # 4. 提交结果到 GitHub
      - name: Commit results
        run: |
          # 告诉 Git 信任这个目录（关键！）
          git config --global --add safe.directory /__w/learning_system_automation/learning_system_automation

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add results.json
          git commit -m "Auto: Results for ${{ inputs.student_id }} [skip ci]" || echo "No changes to commit"
          git pull --rebase origin main || true
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main || true
      # - name: Commit results
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"
      #     git add results.json
      #     git commit -m "Auto: Results for ${{ inputs.student_id }} [skip ci]" || echo "No changes to commit"
      #     git pull --rebase origin main || true
      #     git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main || true

      # 5. 上传到 Google Sheets（可选）
      - name: Upload to Google Sheets
        continue-on-error: true
        env:
          GAS_SCRIPT_URL: ${{ secrets.GAS_WEBAPP_URL }}
        run: |
          curl --fail --show-error --retry 3 \
            -X POST "$GAS_SCRIPT_URL" \
            -H "Content-Type: application/json" \
            --data-binary @results.json

      # 6. 通知状态
      - name: Notify status
        if: always()
        run: |
          echo "工作流状态: ${{ job.status }}"
          echo "结果文件: https://github.com/${{ github.repository }}/blob/main/results.json"
