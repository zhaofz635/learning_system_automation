name: Textbook Analysis Pipeline

on:
  workflow_dispatch:
    inputs:
      student_id:
        description: '学生ID (如 test001)'
        required: true
        type: string
      score:
        description: '测试成绩 (0-5分)'
        required: true
        type: string
      cognitive_load:
        description: '认知负荷评分 (1-5分，逗号分隔)'
        required: true
        type: string

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      # 1. 检出代码
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      # 2. 设置Python环境
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
    
      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -c "import nltk; nltk.download('punkt', download_dir='/tmp/nltk_data')"
          export NLTK_DATA=/tmp/nltk_data
    
      # 4. 准备输入数据
      - name: Prepare input files
        run: |
          echo '{
            "student_id": "${{ inputs.student_id }}",
            "score": ${{ inputs.score }},
            "cognitive_load": [${{ inputs.cognitive_load }}]
          }' > input_data.json
          cat input_data.json
    
      # 5. 运行分析脚本
      - name: Run analysis script
        env:
          Access_Key_Secret: ${{ secrets.Access_Key_Secret }}
        run: |
          python textbook_difficulty_system.py \
            --cognitive_load input_data.json \
            --scores input_data.json \
            --textbook textbook.json \
            --output results.json
          cat results.json
    
      # 6. 自动提交结果
      - name: Commit results
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add results.json
          git commit -m "Auto-update: Analysis results for ${{ inputs.student_id }}" || echo "No changes to commit"
          git push
    
      # 7. 上传到Google Drive
      - name: Upload to Google Drive
        env:
          GAS_SCRIPT_URL: ${{ secrets.GAS_WEBAPP_URL }}
        run: |
          curl -X POST "$GAS_SCRIPT_URL" \
            -H "Content-Type: application/json" \
            --data-binary @results.json
    
      # 8. 发送通知
      - name: Notify completion
        if: always()
        run: |
          echo "Analysis completed for student ${{ inputs.student_id }}"
          echo "View results: https://github.com/zhaofz635/learning_system_automation/blob/main/results.json"
